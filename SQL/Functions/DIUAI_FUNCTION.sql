----Create table PostStatus
CREATE TABLE TB_POSTSTATUS
(
    STATUSID INTEGER PRIMARY KEY,
    STATUSNAME NVARCHAR2(255) NOT NULL UNIQUE
);

--trigger t?ng STATUSID t? ??ng
CREATE SEQUENCE AUTO_INCREMENT_SEQUENCE_POSTSTATUS
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TRIGGER_AUTOINCRE_TB_POSTSTATUS_STATUSID
BEFORE INSERT ON
TB_POSTSTATUS
REFERENCING NEW AS NEW
    FOR EACH ROW BEGIN SELECT
    AUTO_INCREMENT_SEQUENCE_POSTSTATUS.NEXTVAL INTO :NEW.STATUSID
    FROM DUAL;
END;
--insert d? li?u cho b?ng
INSERT INTO TB_POSTSTATUS (STATUSNAME) VALUES ('?ang ch? ');
INSERT INTO TB_POSTSTATUS (STATUSNAME) VALUES ('?ã có ng??i h?n');
INSERT INTO TB_POSTSTATUS (STATUSNAME) VALUES ('Thành công');
INSERT INTO TB_POSTSTATUS (STATUSNAME) VALUES ('?ã h?t h?n');
INSERT INTO TB_POSTSTATUS (STATUSNAME) VALUES ('?ã xóa');
commit;
----Create table Category
CREATE TABLE TB_CATEGORY
(
    CATEGORYID INTEGER PRIMARY KEY,
    CATEGORYNAME NVARCHAR2(255) NOT NULL UNIQUE
);

--Trigger t?ng CATEGORYID t? ??ng
drop SEQUENCE AUTO_INCREMENT_SEQUENCE_CATEGORY;
CREATE SEQUENCE AUTO_INCREMENT_SEQUENCE_CATEGORY
START WITH 1
INCREMENT BY 1;

drop TRIGGER TRIGGER_AUTOINCRE_TB_CATEGORY_CATEGORYID;
CREATE OR REPLACE TRIGGER TRIGGER_AUTOINCRE_TB_CATEGORY_CATEGORYID
BEFORE INSERT ON
TB_CATEGORY
REFERENCING NEW AS NEW
    FOR EACH ROW BEGIN SELECT
    AUTO_INCREMENT_SEQUENCE_CATEGORY.NEXTVAL INTO :NEW.CATEGORYID
    FROM DUAL;
END;
--Insert d? li?u cho b?ng
INSERT INTO TB_CATEGORY (CATEGORYNAME) VALUES ('Th?c ph?m');
INSERT INTO TB_CATEGORY (CATEGORYNAME) VALUES ('V?t d?ng');
INSERT INTO TB_CATEGORY (CATEGORYNAME) VALUES ('Y t?');
INSERT INTO TB_CATEGORY (CATEGORYNAME) VALUES ('Giáo d?c');
INSERT INTO TB_CATEGORY (CATEGORYNAME) VALUES ('B?a ?n');
INSERT INTO TB_CATEGORY (CATEGORYNAME) VALUES ('Khác');
commit;
----Create table Purpose
CREATE TABLE TB_PURPOSE
(
    PURPOSEID INTEGER PRIMARY KEY,
    PURPOSENAME NVARCHAR2(255) NOT NULL UNIQUE
);
--Trigger t?ng PURPOSEID t? ??ng
CREATE SEQUENCE AUTO_INCREMENT_SEQUENCE_PURPOSE
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TRIGGER_AUTOINCRE_TB_PURPOSE_PURPOSEID
BEFORE INSERT ON
TB_PURPOSE
REFERENCING NEW AS NEW
    FOR EACH ROW BEGIN SELECT
    AUTO_INCREMENT_SEQUENCE_PURPOSE.NEXTVAL INTO :NEW.PURPOSEID
    FROM DUAL;
END;
--insert d? li?u cho b?ng
INSERT INTO TB_PURPOSE (PURPOSENAME) VALUES ('Trao t?ng');
INSERT INTO TB_PURPOSE (PURPOSENAME) VALUES ('Xin nh?n');
INSERT INTO TB_PURPOSE (PURPOSENAME) VALUES ('Gây qu?');
INSERT INTO TB_PURPOSE (PURPOSENAME) VALUES ('Hi?n máu');
commit;
----Create table Role
CREATE TABLE TB_ROLE
(
    ROLEID INTEGER PRIMARY KEY,
    ROLENAME NVARCHAR2(255) NOT NULL
);
--Trigger t?ng ROLEID t? ??ng
CREATE SEQUENCE AUTO_INCREMENT_SEQUENCE_ROLE
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TRIGGER_AUTOINCRE_TB_ROLE_ROLEID
BEFORE INSERT ON
TB_ROLE
REFERENCING NEW AS NEW
    FOR EACH ROW BEGIN SELECT
    AUTO_INCREMENT_SEQUENCE_ROLE.NEXTVAL INTO :NEW.ROLEID
    FROM DUAL;
END;
--insert d? li?u cho b?ng
INSERT INTO TB_ROLE (ROLENAME) VALUES ('Ng??i dùng');
INSERT INTO TB_ROLE (ROLENAME) VALUES ('Qu?n tr? viên');
commit;
----Create table User
CREATE TABLE TB_USER
(
    USERID INTEGER PRIMARY KEY,
    FIRSTNAME NVARCHAR2(40) NOT NULL,
    LASTNAME NVARCHAR2(40) NOT NULL,
    GENDER INTEGER NOT NULL,
    PHONE CHAR(10) NOT NULL UNIQUE,
    DATEOFBIRTH DATE NOT NULL,
    EMAIL VARCHAR2(255) UNIQUE,
    SCORE INTEGER NOT NULL,
    AVATAR VARCHAR2(255),
    CREATEDON DATE NOT NULL,
    PASSWORD VARCHAR2(255) NOT NULL,
    ROLEID INTEGER NOT NULL,
    ISDELETED INTEGER NOT NULL
);

--create sequence
CREATE SEQUENCE AUTO_INCREMENT_SEQUENCE_USER
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TRIGGER_AUTOINCRE_TB_USER_USERID
BEFORE INSERT ON
TB_USER
REFERENCING NEW AS NEW
    FOR EACH ROW BEGIN SELECT
    AUTO_INCREMENT_SEQUENCE_USER.NEXTVAL INTO :NEW.USERID
    FROM DUAL;
END;

--FOREIGN KEY OF TABLE TB_USER
alter table TB_USER 
add constraint FK_USER_ROLE foreign key (RoleId)
references TB_ROLE(Roleid);
--INSERT D? LI?U M?U CHO B?NG
INSERT INTO TB_USER (FIRSTNAME,LASTNAME,GENDER,PHONE,DATEOFBIRTH,EMAIL,SCORE,AVATAR,CREATEDON,PASSWORD,ROLEID,ISDELETED) VALUES  ('Nguy?n V?n', 'Nam', 1, '0375436543', TO_DATE('23/10/1998', 'dd/mm/yyyy'), 'nguyenvannam@gmail.com', 100, NULL, sysdate, '123456789', 2, 0);
INSERT INTO TB_USER (FIRSTNAME,LASTNAME,GENDER,PHONE,DATEOFBIRTH,EMAIL,SCORE,AVATAR,CREATEDON,PASSWORD,ROLEID,ISDELETED) VALUES  ('V? V?n ', 'H??ng', 1, '0586750123', TO_DATE('05/08/1996', 'dd/mm/yyyy'), 'vuvanhuong@gmail.com', 140, NULL, sysdate, '123455432', 1, 0);
INSERT INTO TB_USER (FIRSTNAME,LASTNAME,GENDER,PHONE,DATEOFBIRTH,EMAIL,SCORE,AVATAR,CREATEDON,PASSWORD,ROLEID,ISDELETED) VALUES  ('Ph?m Th? ', 'Xuân', 2, '0786542104', TO_DATE('15/06/1992', 'dd/mm/yyyy'), 'phamthixuan@gmail.com', 120, NULL, sysdate, '11223344', 1, 0);
INSERT INTO TB_USER (FIRSTNAME,LASTNAME,GENDER,PHONE,DATEOFBIRTH,EMAIL,SCORE,AVATAR,CREATEDON,PASSWORD,ROLEID,ISDELETED) VALUES  ('Nguy?n Tr?n Minh', 'Tú', 2, '0395040233', TO_DATE('12/03/2000', 'dd/mm/yyyy'), 'nguyentranminhtu@gmail.com', 80, NULL, sysdate, '20202021', 1, 0);
INSERT INTO TB_USER (FIRSTNAME,LASTNAME,GENDER,PHONE,DATEOFBIRTH,EMAIL,SCORE,AVATAR,CREATEDON,PASSWORD,ROLEID,ISDELETED) VALUES  ('D??ng Th? Thu', 'Trang', 2, '0776343252', TO_DATE('11/02/2002', 'dd/mm/yyyy'), 'dtthutrang@gmail.com', 200, NULL, sysdate, '20212022', 1, 0);
INSERT INTO TB_USER (FIRSTNAME,LASTNAME,GENDER,PHONE,DATEOFBIRTH,EMAIL,SCORE,AVATAR,CREATEDON,PASSWORD,ROLEID,ISDELETED) VALUES  ('Tr?n V? Nh?t ', 'Anh', 1, '0375889789', TO_DATE('25/12/1999', 'dd/mm/yyyy'), 'tranvnhatanh@gmail.com', 180, NULL, sysdate, 'anh123456', 1, 0);
INSERT INTO TB_USER (FIRSTNAME,LASTNAME,GENDER,PHONE,DATEOFBIRTH,EMAIL,SCORE,AVATAR,CREATEDON,PASSWORD,ROLEID,ISDELETED) VALUES  ('Nguy?n Hoàng ', 'Anh', 1, '0345768253', TO_DATE('31/03/1995', 'dd/mm/yyyy'), 'nguyenhoanganh@gmail.com', 150, NULL, sysdate, 'hoanganh@', 1, 0);
INSERT INTO TB_USER (FIRSTNAME,LASTNAME,GENDER,PHONE,DATEOFBIRTH,EMAIL,SCORE,AVATAR,CREATEDON,PASSWORD,ROLEID,ISDELETED) VALUES  ('Tr?n C?m', 'Thu', 2, '0342392222', TO_DATE('09/09/1997', 'dd/mm/yyyy'), 'trancamthu@gmail.com', 95, NULL, sysdate, 'camthu123@', 2, 0);
INSERT INTO TB_USER (FIRSTNAME,LASTNAME,GENDER,PHONE,DATEOFBIRTH,EMAIL,SCORE,AVATAR,CREATEDON,PASSWORD,ROLEID,ISDELETED) VALUES  ('Tr??ng Chí', 'C??ng', 1, '0933545218', TO_DATE('19/02/2001', 'dd/mm/yyyy'), 'truongchicuong@gmail.com', 105, NULL, sysdate, 'chicuong2022@', 2, 0);
INSERT INTO TB_USER (FIRSTNAME,LASTNAME,GENDER,PHONE,DATEOFBIRTH,EMAIL,SCORE,AVATAR,CREATEDON,PASSWORD,ROLEID,ISDELETED) VALUES  ('Nguy?n ??c ', '??i', 1, '0847523389', TO_DATE('25/10/1992', 'dd/mm/yyyy'), 'nguyenducdai@gmail.com', 125, NULL, sysdate, '135792468', 1, 0);
commit;
--Trigger thi?t l?p các giá tr? m?c ??nh cho d? li?u b?ng TB_USER
CREATE OR REPLACE TRIGGER TRIGGER_DEFAULT_VALUE_USER BEFORE 
    INSERT ON tb_user
    REFERENCING
        NEW AS new
    FOR EACH ROW
BEGIN
    SELECT
        current_date
    INTO :new.createdon
    FROM
        dual;

    :new.score := 0;
    :new.avatar := NULL;
    :new.isdeleted := 0;
END;
----Create table Post
CREATE TABLE TB_POST
(
    POSTID INTEGER PRIMARY KEY,
    OWNERID INTEGER NOT NULL,
    PARTNERID INTEGER,
    STATUSID INTEGER NOT NULL,
    TITLE NVARCHAR2(255) NOT NULL,
    CONTENT NVARCHAR2(255) NOT NULL,
    CATEGORYID INTEGER NOT NULL,
    IMAGEPATH VARCHAR2(255),
    CREATEDON DATE NOT NULL,
    UPDATEDON DATE,
    PURPOSEID INTEGER NOT NULL,
    ISDELETED INTEGER NOT NULL
);

--create sequence 
CREATE SEQUENCE AUTO_INCREMENT_SEQUENCE_POST
START WITH 1
INCREMENT BY 1;

--table post
CREATE OR REPLACE TRIGGER TRIGGER_AUTOINCRE_TB_POST_POSTID
BEFORE INSERT ON
TB_POST
REFERENCING NEW AS NEW
    FOR EACH ROW BEGIN SELECT
    AUTO_INCREMENT_SEQUENCE_POST.NEXTVAL INTO :NEW.POSTID
    FROM DUAL;
END;

--FOREIGN KEY OF TABLE TB_POST
alter table TB_POST 
add constraint FK_POST_USER1 foreign key (OwnerId)
references TB_USER(UserId);

alter table TB_POST 
add constraint FK_POST_USER2 foreign key (PartnerID)
references TB_USER(UserId);

alter table TB_POST 
add constraint FK_POST_STATUS foreign key (StatusId)
references TB_PostStatus(StatusId);

alter table TB_POST 
add constraint FK_POST_CATEGORY foreign key (CategoryId)
references TB_CATEGORY(CategoryId);

alter table TB_POST 
add constraint FK_POST_PURPOSE foreign key (PurposeId)
references TB_PURPOSE(PurposeId);

-- Insert d? li?u m?u cho b?ng
select * from TB_POST;
INSERT INTO TB_POST (OWNERID,PARTNERID,STATUSID,TITLE,CONTENT,CATEGORYID,IMAGEPATH,CREATEDON,UPDATEDON,PURPOSEID,ISDELETED) VALUES (2, null, 1, 'D? m?t bao 50kg g?o', 'V? quê mà còn bao g?o ngon 50kg, ai c?n liên h? mình t?ng', 1, NULL, sysdate, NULL, 1, 0);
INSERT INTO TB_POST (OWNERID,PARTNERID,STATUSID,TITLE,CONTENT,CATEGORYID,IMAGEPATH,CREATEDON,UPDATEDON,PURPOSEID,ISDELETED) VALUES (3, null, 1, 'C?n cho tr?ng', 'Gà nhà nuôi ?? tr?ng nhi?u ?n không h?t, ai ?n tr?ng mình cho', 1, NULL, sysdate, NULL, 1, 0);
INSERT INTO TB_POST (OWNERID,PARTNERID,STATUSID,TITLE,CONTENT,CATEGORYID,IMAGEPATH,CREATEDON,UPDATEDON,PURPOSEID,ISDELETED) VALUES (4, null, 1, 'Gây qu? h? tr? tr? em m? côi do covid', 'Q?y t? thi?n ABC gây qu? h? tr? tr? em m? côi do covid. D? ki?n h? tr? 100 tr?, giá tr? 200 tri?u. Ngày k?t thúc: 5/5/2022', 6, NULL, sysdate, NULL, 3, 0);
INSERT INTO TB_POST (OWNERID,PARTNERID,STATUSID,TITLE,CONTENT,CATEGORYID,IMAGEPATH,CREATEDON,UPDATEDON,PURPOSEID,ISDELETED) VALUES (2, null, 1, 'Xin sgk l?p 9', 'Em c?n xin sách giáo khoa l?p 9 cho em c?a em. Ai có cho em xin ?. Em c?m ?n.', 4, NULL, sysdate, NULL, 2, 0);
INSERT INTO TB_POST (OWNERID,PARTNERID,STATUSID,TITLE,CONTENT,CATEGORYID,IMAGEPATH,CREATEDON,UPDATEDON,PURPOSEID,ISDELETED) VALUES (5, null, 1, 'Cho rau s?ch', 'Rau v??n ai c?n qua c?t ?n tho?i mái', 1, NULL, sysdate, NULL, 1, 0);
INSERT INTO TB_POST (OWNERID,PARTNERID,STATUSID,TITLE,CONTENT,CATEGORYID,IMAGEPATH,CREATEDON,UPDATEDON,PURPOSEID,ISDELETED) VALUES (6, null, 1, 'T?ng vitamin C', 'Mình dc t?ng 1 l? vitaminC không xài ', 3, NULL, sysdate, NULL, 1, 0);
INSERT INTO TB_POST (OWNERID,PARTNERID,STATUSID,TITLE,CONTENT,CATEGORYID,IMAGEPATH,CREATEDON,UPDATEDON,PURPOSEID,ISDELETED) VALUES (6, null, 1, 'Xin s?a cho bé 5 tháng tu?i', 'V? ch?ng công nhân ?ang b? n? l??ng nên r?t khó kh?n, mong ???c cô chú anh ch? h? tr? ít s?a cho cháu.', 1, NULL, sysdate, NULL, 2, 0);
INSERT INTO TB_POST (OWNERID,PARTNERID,STATUSID,TITLE,CONTENT,CATEGORYID,IMAGEPATH,CREATEDON,UPDATEDON,PURPOSEID,ISDELETED) VALUES (7, null, 1, 'T?ng sách gi?i tích, v?t lí', 'Mình có d? sách gi?i tích 1 2, v?t lí 1 2, em nào c?n mình t?ng', 4, NULL, sysdate, NULL, 1, 0);
INSERT INTO TB_POST (OWNERID,PARTNERID,STATUSID,TITLE,CONTENT,CATEGORYID,IMAGEPATH,CREATEDON,UPDATEDON,PURPOSEID,ISDELETED) VALUES (4, null, 1, 'T?ng cà ri', 'Nay h?c n?u ?n, cà ri mình n?u ngon l?m, b?n nào qua ?n ph? mình mình c?m ?n', 5, NULL, sysdate, NULL, 1, 0);
INSERT INTO TB_POST (OWNERID,PARTNERID,STATUSID,TITLE,CONTENT,CATEGORYID,IMAGEPATH,CREATEDON,UPDATEDON,PURPOSEID,ISDELETED) VALUES (3, null, 1, 'Xin sách toeic', 'Có anh ch? nào h?c xong toeic thì cho em xin ho?c mua l?i ?', 4, NULL, sysdate, NULL, 2, 0);
commit;
--Trigger thi?t l?p các giá tr? m?c ??nh cho d? li?u b?ng TB_Post
CREATE OR REPLACE TRIGGER trigger_default_value_post BEFORE
    INSERT ON tb_post
    REFERENCING
        NEW AS new
    FOR EACH ROW
BEGIN
    SELECT
        current_date
    INTO :new.createdon
    FROM
        dual;

    :new.partnerid := NULL;
    :new.updatedon := NULL;
    :new.imagepath := NULL;
    :new.statusid := 1;
    :new.isdeleted := 0;
END;

-- trigger ?i?m nhân ái ???c t? ??ng t?ng khi bài vi?t chuy?n sang tr?ng thái thành công
CREATE OR REPLACE TRIGGER TRIGGER_ADD_SCORE AFTER
    UPDATE ON tb_post
    REFERENCING
        OLD AS old
        NEW AS new
    FOR EACH ROW
BEGIN
    IF (:NEW.STATUSID = 3 AND :NEW.PURPOSEID = 1) THEN
        --n?u tr?ng thái thành công (status = 3) và m?c ?ích c?a
        --bài ??ng là ?? trao/t?ng thì c?ng ?i?m cho ch? bài vi?t(ng??i cho ?i)
        UPDATE TB_USER
        SET TB_USER.SCORE = TB_USER.SCORE + 10
        WHERE TB_USER.USERID = :NEW.OWNERID;
    ELSIF (:NEW.STATUSID = 3 AND :NEW.PURPOSEID = 2) THEN
        --n?u tr?ng thái thành công (status = 3) và m?c ?ích c?a
        --bài ??ng là ?? xin/nh?n thì c?ng ?i?m cho ng??i ??t h?n(ng??i t?ng)
        UPDATE TB_USER
        SET TB_USER.SCORE = TB_USER.SCORE + 10
        WHERE TB_USER.USERID = :NEW.PARTNERID;
    END IF;
END;
CREATE TABLE TB_NOTIFICATION
(
    NOTIID INTEGER PRIMARY KEY,
    USERID INTEGER NOT NULL,
    CONTENT NVARCHAR2(255) NOT NULL,
    CREATEDON DATE NOT NULL,
    ISSEEN INTEGER NOT NULL
);

CREATE SEQUENCE AUTO_INCREMENT_SEQUENCE_NOTIFICATION
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TRIGGER_AUTOINCRE_TB_NOTIFICATION_NOTIID
BEFORE INSERT ON
TB_NOTIFICATION
REFERENCING NEW AS NEW
    FOR EACH ROW BEGIN SELECT
    AUTO_INCREMENT_SEQUENCE_NOTIFICATION.NEXTVAL INTO :NEW.NOTIID
    FROM DUAL;
END;

--FOREIGN KEY OF TABLE TB_NOTIFICATION
alter table TB_NOTIFICATION
add constraint FK_NOTIFICATION_USERID foreign key (UserId)
references TB_USER(UserId);

CREATE OR REPLACE TRIGGER TRIGGER_DEFAULT_VALUE_NOTIFICATION BEFORE 
    INSERT ON TB_NOTIFICATION
    REFERENCING
        NEW AS new
    FOR EACH ROW
BEGIN
    SELECT
        current_date
    INTO :new.createdon
    FROM
        dual; 
    :NEW.ISSEEN := 0;
END;

--INSERT INTO TB_NOTIFICATION (USERID, CONTENT) VALUES (1,'?ã t?o tài kho?n thành công')
-----FUNCTION---------
--1. F_SUM_SCORE
CREATE OR REPLACE FUNCTION F_SUM_SCORE(USER_ID INTEGER)
RETURN INTEGER
AS
    TOTAL_SCORE INTEGER;
BEGIN
    SELECT SUM(SCORE) INTO TOTAL_SCORE
    FROM TB_USER
    WHERE USERID=USER_ID;
RETURN TOTAL_SCORE;
EXCEPTION WHEN NO_DATA_FOUND THEN
RETURN ('NO DATA FOUND');
END;

SET SERVEROUTPUT ON;
EXECUTE dbms_output.put_line('TOTAL SCORE IS: '||F_SUM_SCORE(&USER_ID));

--2. F_SUM_POST_OWNER
CREATE OR REPLACE FUNCTION F_COUNT_POST_OWNER(OWNER_ID NUMBER)
RETURN NUMBER
AS
    COUNT_POST_OWNER NUMBER;
BEGIN
    SELECT COUNT(OWNERID) INTO COUNT_POST_OWNER
    FROM TB_POST
    WHERE OWNERID=OWNER_ID;
RETURN COUNT_POST_OWNER;
EXCEPTION WHEN NO_DATA_FOUND THEN
RETURN ('NO DATA FOUND');
END;

SET SERVEROUTPUT ON;
EXECUTE dbms_output.put_line('THE NUMBERS OF POSTS IS: '||F_COUNT_POST_OWNER(&OWNER_ID));
--3. THONG KE SO LUONG BAI VIET TRONG MOT NGAY
CREATE OR REPLACE FUNCTION F_SUM_POST_DAY (NGAY NUMBER, THANG NUMBER, NAM NUMBER )
RETURN NUMBER
AS
    SUM_POST_DAY NUMBER;
BEGIN
    SELECT COUNT(POSTID) INTO SUM_POST_DAY
    FROM TB_POST
    WHERE EXTRACT ( DAY FROM CREATEDON ) = NGAY AND EXTRACT ( MONTH FROM CREATEDON ) = THANG AND EXTRACT (YEAR FROM CREATEDON)=NAM; 
RETURN SUM_POST_DAY;
EXCEPTION WHEN NO_DATA_FOUND THEN
RETURN ('NO DATA FOUND');
END;
DECLARE
TOTAL_OF_DAY NUMBER;
BEGIN
TOTAL_OF_DAY := F_SUM_POST_DAY(29,04,2022);
DBMS_OUTPUT.PUT_LINE('Tong so bai viet trong ngay: ' || TOTAL_OF_DAY);
END;
--4. THONG KE SO LUONG BAI VIET TRONG MOT THANG, MOT NAM
CREATE OR REPLACE FUNCTION F_SUM_POST_MONTH_YEAR (THANG NUMBER, NAM NUMBER )
RETURN NUMBER
AS
    SUM_POST_MONTH_YEAR NUMBER;
BEGIN
    SELECT COUNT(POSTID) INTO SUM_POST_MONTH_YEAR
    FROM TB_POST
    WHERE EXTRACT ( MONTH FROM CREATEDON ) = THANG AND EXTRACT (YEAR FROM CREATEDON)=NAM; 
RETURN SUM_POST_MONTH_YEAR;
EXCEPTION WHEN NO_DATA_FOUND THEN
RETURN ('NO DATA FOUND');
END;
DECLARE
TOTAL_OF_MONTH_YEAR NUMBER;
BEGIN
TOTAL_OF_MONTH_YEAR := F_SUM_POST_MONTH_YEAR(04,2022);
DBMS_OUTPUT.PUT_LINE('Tong so bai viet trong thang va nam: ' || TOTAL_OF_MONTH_YEAR);
END;
--5. THONG KE SO LUONG NGUOI DUNG MOI TRONG MOT THANG 
CREATE OR REPLACE FUNCTION F_COUNT_USER_NEW_MONTH(THANG NUMBER)
RETURN NUMBER
AS
COUNT_USER_NEW_MONTH NUMBER;
BEGIN
IF( THANG < 1 AND THANG > 12 )
THEN
RAISE_APPLICATION_ERROR (-20399, 'Thang nhap vao khong hop le');
END IF;
SELECT COUNT(USERID) INTO COUNT_USER_NEW_MONTH
FROM TB_USER
WHERE EXTRACT(MONTH FROM CREATEDON) = THANG AND ROLEID='1';
RETURN COUNT_USER_NEW_MONTH;
END;
DECLARE
TOTAL_OF_USER_MONTH NUMBER;
BEGIN
TOTAL_OF_USER_MONTH := F_COUNT_USER_NEW_MONTH(04);
DBMS_OUTPUT.PUT_LINE('Tong so nguoi dung moi trong thang: ' || TOTAL_OF_USER_MONTH);
END;